---
    version: '2'
    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:5.5.1
        hostname: zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
    
      broker1:
        image: confluentinc/cp-server:5.5.1
        hostname: broker1
        container_name: broker1
        depends_on:
          - zookeeper
        ports:
          - "9092:9092"
          - "9101:9101"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_JMX_PORT: 9101
          CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:29092
          CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
          CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
          CONFLUENT_METRICS_ENABLE: 'true'
          CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        
      broker2:
        image: confluentinc/cp-server:5.5.1
        hostname: broker2
        container_name: broker2
        depends_on:
          - zookeeper
        ports:
          - "9093:9093"
          - "9102:9102"
        environment:
          KAFKA_BROKER_ID: 2
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29093,PLAINTEXT_HOST://localhost:9093
          KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_JMX_PORT: 9102
          CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker2:29093
          CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
          CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
          CONFLUENT_METRICS_ENABLE: 'true'
          CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

      schema-registry:
        image: confluentinc/cp-schema-registry:5.5.1
        hostname: schema-registry
        container_name: schema-registry
        depends_on:
          - zookeeper
          - broker1
          - broker2
        ports:
          - "8081:8081"
        environment:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
    
      connect:
        image: cnfldemos/cp-server-connect-datagen:0.3.2-5.5.0
        hostname: connect
        container_name: connect
        depends_on:
          - zookeeper
          - broker1
          - broker2
          - schema-registry
          - postgres
          - elasticsearch
        ports:
          - "8083:8083"
        volumes: 
          - ./plugins/debezium-debezium-connector-postgresql-1.2.1/lib:/usr/share/java/kafka-connect-postgres
        environment:
          CONNECT_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29093'
          CONNECT_REST_ADVERTISED_HOST_NAME: connect
          CONNECT_REST_PORT: 8083
          CONNECT_GROUP_ID: compose-connect-group
          CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
          CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
          CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
          CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
          CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          # CLASSPATH required due to CC-2422
          CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.5.1.jar
          CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
          CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
          CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
          CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    
      control-center:
        image: confluentinc/cp-enterprise-control-center:5.5.1
        hostname: control-center
        container_name: control-center
        depends_on:
          - zookeeper
          - broker1
          - broker2
          - schema-registry
          - connect
        ports:
          - "9021:9021"
        environment:
          CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29093'
          CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
          CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
          CONTROL_CENTER_REPLICATION_FACTOR: 1
          CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
          CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
          CONFLUENT_METRICS_TOPIC_REPLICATION: 1
          PORT: 9021
    
      rest-proxy:
        image: confluentinc/cp-kafka-rest:5.5.1
        depends_on:
          - zookeeper
          - broker1
          - broker2
          - schema-registry
        ports:
          - 8082:8082
        hostname: rest-proxy
        container_name: rest-proxy
        environment:
          KAFKA_REST_HOST_NAME: rest-proxy
          KAFKA_REST_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29093'
          KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
          KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      
      postgres:
        container_name: postgres
        ports:
            - '5432:5432'
        environment:
            - POSTGRES_PASSWORD=postgres
            - PGDATA=/tmp
            - POSTGRES_DB=cdc
        volumes:
            - '~/docker-mnt/postgres:/var/lib/postgresql/data'
            - $PWD/conf:/home/config
        # using debezium image for the logical decoding plugins
        image: debezium/postgres:11
        command: postgres -c config_file=/home/config/postgresql.conf

      elasticsearch:
        container_name: elasticsearch
        ports:
            - '9200:9200'
            - '9300:9300'
        environment:
            - discovery.type=single-node
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        image: 'elasticsearch:7.8.0'